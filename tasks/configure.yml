---

- name: re-read facts
  setup:
    gather_subset:
      - 'all'
#      - 'any'

- name: update configuration file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: etc/default/ufw.j2
      dest: /etc/default/ufw
    - src: etc/ansible/facts.d/ufw.fact.j2
      dest: /etc/ansible/facts.d/ufw.fact
  loop_control:
    label: "{{ item.dest }}"
  register: configuration

- name: reset   # noqa no-handler
  ufw:
    state: reset
  when:
    - configuration is changed
  tags:
    - ufw-configure-reset

- name: set default (incoming) policy
  ufw:
    policy: "{{ ufw_default_incoming_policy }}"
    direction: incoming
  notify: reload ufw
  tags:
    - ufw-configure-default-policy
    - ufw-configure-default-policy-incoming

- name: set default (outgoing) policy
  ufw:
    policy: "{{ ufw_default_outgoing_policy }}"
    direction: outgoing
  notify: reload ufw
  tags:
    - ufw-configure-default-policy
    - ufw-configure-default-policy-outgoing

- name: configure rules | update after file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_after6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_after6_rules_file }}"
    - src: "{{ ufw_etc_ufw_after_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_after_rules_file }}"
  when: ufw_etc_ufw_after_manage | bool
  register: _after_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-after

- name: configure rules | update before file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_before6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_before6_rules_file }}"
    - src: "{{ ufw_etc_ufw_before_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_before_rules_file }}"
  when: ufw_etc_ufw_before_manage | bool
  register: _before_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-before

- name: configure rules | update user file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_user6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_user6_rules_file }}"
    - src: "{{ ufw_etc_ufw_user_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_user_rules_file }}"
  when: ufw_etc_ufw_user_manage | bool
  register: _user_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-user

- name: define rules
  ufw:
    rule: "{{ item.rule }}"
    interface: "{{ item.interface | default('') }}"
    direction: "{{ item.direction | default('in') }}"
    from_ip: "{{ item.from_ip | default('any') }}"
    to_ip: "{{ item.to_ip | default('any') }}"
    from_port: "{{ item.from_port | default('') }}"
    to_port: "{{ item.to_port | default('') }}"
    protocol: "{{ item.protocol | default('any') }}"
    route: "{{ item.route | default(omit) }}"
    log: "{{ item.log | default(false) }}"
    comment: "{{ item.comment | default(omit) }}"
  with_items: "{{ ufw_rules }}"
  loop_control:
    label: "interface '{{ item.interface | default('') }}', IP '{{ item.from_ip | default('any') }}', Port '{{ item.to_port | default('') }}' -> {{ item.rule }}"
  notify: reload ufw
  tags:
    - ufw-configure-rules

- name: logging
  ufw:
    logging: "{{ ufw_logging }}"
  notify: reload ufw
...
